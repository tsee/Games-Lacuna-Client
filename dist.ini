name    = Games-Lacuna-Client
;version = auto
author  = Steffen Mueller <smueller@cpan.org>
author  = Gavin Mogan <halkeye@cpan.org>
license = Perl_5
copyright_holder = Steffen Mueller

; version provider
[Git::NextVersion]
first_version = 0.001       ; this is the default
version_regexp  = ^release-(.+)$   ; this is the default

; choose files to include
[GatherDir]
[PruneCruft]
[ManifestSkip]

; file modifications
[PkgVersion]

; generated files
;[Readme]
[ReadmeAnyFromPod / text.build ]
filename = README
type = text
[License]

; t tests
[ExtraTests]

; xt tests
[MetaTests]         ; xt/release/meta-yaml.t
[PodSyntaxTests]    ; xt/release/pod-syntax.t
;[PodCoverageTests]  ; xt/release/pod-coverage.t
[PortabilityTests]  ; xt/release/portability.t (of file name)
[Test::CPAN::Changes]
;[UnusedVarsTests]

; metadata
[MetaProvides::Package]
[GithubMeta]
remote = origin     ; better than [Repository]; sets homepage, too
[Prereqs]
JSON::RPC::Common = 0
HTTP::Request     = 0
HTTP::Response    = 0
LWP::UserAgent    = 0
Data::Dumper      = 0
Class::XSAccessor = 1.07
Scalar::Util      = 0
URI               = 0
Class::MOP        = 0
YAML::Any         = 0
AnyEvent          = 0
Date::Parse       = 0
Date::Format      = 0
DateTime          = 0
Number::Format    = 0
FindBin           = 0
IO::Interactive   = 0
MIME::Lite        = 0
Crypt::SSLeay     = 0
Exception::Class  = 0
Time::HiRes       = 0
Try::Tiny         = 0.07
namespace::clean  = 0.20
JSON::RPC::LWP    = 0.006
Moose             = 0
[MetaNoIndex]       ; sets 'no_index' in META
directory = t
directory = xt
directory = examples
[MetaYAML]          ; generate META.yml (v1.4)
[MetaJSON]          ; generate META.json (v2)

; build system
[MakeMaker]
;[ExecDir]
;dir = examples

; manifest (after all generated files)
[Manifest]

; before release
[Git::Check]
allow_dirty = dist.ini
allow_dirty = Changes
[CheckChangesHasContent] ; ensure Changes has been updated
[CheckExtraTests]   ; ensure xt/ tests pass
[TestRelease]       ; ensure t/ tests pass
[ConfirmRelease]

; releaser
[UploadToCPAN]      ; uploads to CPAN

; after release
[Git::Commit / Commit_Dirty_Files] ; commit Changes (as released)

[Git::Tag]          ; tag repo with custom tag
tag_format = release-%v

; NextRelease acts *during* pre-release to write $VERSION and
; timestamp to Changes and  *after* release to add a new {{$NEXT}}
; section, so to act at the right time after release, it must actually
; come after Commit_Dirty_Files but before Commit_Changes in the
; dist.ini.  It will still act during pre-release as usual

[NextRelease]

[CopyMakefilePLFromBuild]
[CopyReadmeFromBuild]

[Git::Commit / Commit_Changes] ; commit Changes (for new dev)

;[Git::Push]         ; push repo to remote
;push_to = origin
